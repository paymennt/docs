"use strict";(self.webpackChunkpmnnt_docs=self.webpackChunkpmnnt_docs||[]).push([[8775],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,k=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(k,r(r({ref:t},c),{},{components:n})):a.createElement(k,r({ref:t},c))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:i,r[1]=l;for(var s=2;s<o;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8258:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),i=(n(7294),n(3905));const o={title:"android sdk"},r=void 0,l={unversionedId:"sdks/android",id:"sdks/android",title:"android sdk",description:"View on GitHub",source:"@site/docs/4-sdks/2-android.md",sourceDirName:"4-sdks",slug:"/sdks/android",permalink:"/docs/sdks/android",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"android sdk"},sidebar:"docs",previous:{title:"ios sdk",permalink:"/docs/sdks/ios"},next:{title:"php sdk",permalink:"/docs/sdks/php"}},p={},s=[{value:"Setting up the SDK",id:"setting-up-the-sdk",level:2},{value:"JitPack Repository",id:"jitpack-repository",level:3},{value:"paymennt SDK Dependency",id:"paymennt-sdk-dependency",level:3},{value:"Required Permissions",id:"required-permissions",level:3},{value:"Adding SafetyNet Support",id:"adding-safetynet-support",level:3},{value:"SDK Flow",id:"sdk-flow",level:2},{value:"Using the SDK",id:"using-the-sdk",level:2},{value:"Create a new mobile checkout request",id:"create-a-new-mobile-checkout-request",level:3},{value:"Create a new the PointCheckoutClient",id:"create-a-new-the-pointcheckoutclient",level:3},{value:"Initialize",id:"initialize",level:4},{value:"Start the Payment Process",id:"start-the-payment-process",level:3},{value:"Listen to Payment Events",id:"listen-to-payment-events",level:3},{value:"Retrieve Checkout Status",id:"retrieve-checkout-status",level:3},{value:"API References",id:"api-references",level:2},{value:"New Mobile Checkout",id:"new-mobile-checkout",level:3},{value:"Get Checkout Details",id:"get-checkout-details",level:3}],c={toc:s},d="wrapper";function u(e){let{components:t,...o}=e;return(0,i.kt)(d,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("a",{className:"button button--primary button--large",href:"http://www.github.com/pointcheckout/android-sdk"},"View on GitHub"),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("p",null,"This documentation highlights the requirements for using the ",(0,i.kt)("strong",{parentName:"p"},"paymennt")," Android SDK. Throughout this document, we aassume that you are using Android Studio for your Android development."),(0,i.kt)("admonition",{title:"MINIMUM REQUIREMENTS",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"The minimum supported Android API level for the SDK is ",(0,i.kt)("strong",{parentName:"p"},"16 (KitKat)"),", however, setting the minimum Android API level to ",(0,i.kt)("strong",{parentName:"p"},"26 (Pie)")," is recommended.")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The SDK uses Google's ",(0,i.kt)("a",{parentName:"p",href:"https://developer.android.com/training/safetynet/attestation"},"SafetyNet API")," for security, setting minimum Android API to lower than 26 will prevent it from functioning.")),(0,i.kt)("h2",{id:"setting-up-the-sdk"},"Setting up the SDK"),(0,i.kt)("h3",{id:"jitpack-repository"},"JitPack Repository"),(0,i.kt)("p",null,"Include the ",(0,i.kt)("a",{parentName:"p",href:"https://jitpack.io"},"JitPack.io")," repository to your Android project in ",(0,i.kt)("inlineCode",{parentName:"p"},"your_project_home/build.gradle")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"allprojects {\n  repositories {\n    ...\n    maven { url 'https://jitpack.io' }\n    flatDir {\n      dirs 'libs'\n    }\n  }\n}\n")),(0,i.kt)("h3",{id:"paymennt-sdk-dependency"},"paymennt SDK Dependency"),(0,i.kt)("p",null,"Include the ",(0,i.kt)("strong",{parentName:"p"},"paymennt")," Android SDK dependency to your project in ",(0,i.kt)("inlineCode",{parentName:"p"},"your_project_home/app/build.gradle")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"dependencies {\n  implementation 'com.github.pointcheckout:android-sdk:v1.3'\n}\n")),(0,i.kt)("h3",{id:"required-permissions"},"Required Permissions"),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"paymennt")," SDK requires the following permissions. Please add them to your AndroidManifest.xml file if they are not already present:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<uses-permission android:name="android.permission.INTERNET"/>\n')),(0,i.kt)("h3",{id:"adding-safetynet-support"},"Adding SafetyNet Support"),(0,i.kt)("p",null,"You must add Google's SafetyNet API to your ",(0,i.kt)("inlineCode",{parentName:"p"},"app/build.gradle"),". For details on how to add SafetyNet to your project, follow the instructions found in ",(0,i.kt)("a",{parentName:"p",href:"https://developers.google.com/android/guides/setup"},"this guide"),"."),(0,i.kt)("h2",{id:"sdk-flow"},"SDK Flow"),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"paymennt")," Android SDK requires three distinct steps for you to accept card payments:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a new mobile Checkout"),(0,i.kt)("li",{parentName:"ol"},"Initiate the PointCheckoutClient from the SDK using the provided checkout key"),(0,i.kt)("li",{parentName:"ol"},"Query the API for the payment status")),(0,i.kt)("p",null,"This diagram shows the overall payment and data flow in order to accept payments using the ",(0,i.kt)("strong",{parentName:"p"},"paymennt"),"\nmobile SDK"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Sequence Diagram",src:n(2314).Z,width:"1760",height:"1100"})),(0,i.kt)("h2",{id:"using-the-sdk"},"Using the SDK"),(0,i.kt)("h3",{id:"create-a-new-mobile-checkout-request"},"Create a new mobile checkout request"),(0,i.kt)("p",null,"Send new checkout request to ",(0,i.kt)("a",{parentName:"p",href:"/api/#operation/create-mobile-checkout"},"Create mobile checkout")," API. Check ",(0,i.kt)("a",{parentName:"p",href:"/docs/payment/mobile"},"mobile payment integration guide")," for more details."),(0,i.kt)("admonition",{title:"SERVER API CALL",type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"API calls made to the ",(0,i.kt)("strong",{parentName:"p"},"paymennt")," API endpoints should be made from your server. You should ",(0,i.kt)("strong",{parentName:"p"},"NEVER")," include your API keys in your mobile application. A malicious user can gain access to your account if those keys are exposed.")),(0,i.kt)("h3",{id:"create-a-new-the-pointcheckoutclient"},"Create a new the PointCheckoutClient"),(0,i.kt)("p",null,"Create an object of PointCheckoutClient pointing to the required environment."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"PointCheckoutClient pcoClient = new PointCheckoutClient(environment);\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Environment"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Enviornment.PRODUCTION")),(0,i.kt)("td",{parentName:"tr",align:null},"Use this for accepting customer payments")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Enviornment.TEST")),(0,i.kt)("td",{parentName:"tr",align:null},"Use this during integration testing")))),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Keep a reference of the created client to reuse the same instance")),(0,i.kt)("h4",{id:"initialize"},"Initialize"),(0,i.kt)("p",null,"Initialize the created ",(0,i.kt)("inlineCode",{parentName:"p"},"PointCheckoutClient")," using:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"pcoClient.initialize(context);\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Invoke the ",(0,i.kt)("inlineCode",{parentName:"p"},"initialize")," method when the app starts as it requires 2-3 seconds to initialize the SDK. If the client is not initialized and ",(0,i.kt)("inlineCode",{parentName:"p"},"pay")," is called, the client will call initialize internally before calling pay resulting in delay.")),(0,i.kt)("h3",{id:"start-the-payment-process"},"Start the Payment Process"),(0,i.kt)("p",null,"To commence the payment process, you must call the static ",(0,i.kt)("inlineCode",{parentName:"p"},"pay")," method of the ",(0,i.kt)("inlineCode",{parentName:"p"},"PointCheckoutClient"),". This method accepts 3 parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"context"))," which refers to the current activity context"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"checkoutKey"))," received in the ",(0,i.kt)("a",{parentName:"li",href:"/api/#operation/create-mobile-checkout"},"Create mobile checkout")," API call."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"listener"))," that will be called on payment update or cancellation")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'pcClient.pay(context, checkoutKey, new PointCheckoutEventListener() {\n                @Override\n                public void onUpdate() {\n                    System.out.println("UPDATE CALLBACK");\n                }\n\n                @Override\n                public void onDismiss() {\n                    System.out.println("USER CLOSED THE MODAL");\n                }\n        });\n')),(0,i.kt)("p",null,"Calling the ",(0,i.kt)("inlineCode",{parentName:"p"},"pay")," function will open a modal where the user will be able to complete the payment in a secure manner."),(0,i.kt)("h3",{id:"listen-to-payment-events"},"Listen to Payment Events"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"PointCheckoutEventListener")," event listener has two callbacks:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"onUpdate")," which is called the checkout status is updated (paid, cancelled, failed .etc). You ",(0,i.kt)("strong",{parentName:"li"},"MUST")," call ",(0,i.kt)("strong",{parentName:"li"},"paymennt")," API to fetch the new status of the checkout to verify that its been successfully paid."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"onDismiss")," which is called if the user closes the modal by clicking on close button.")),(0,i.kt)("h3",{id:"retrieve-checkout-status"},"Retrieve Checkout Status"),(0,i.kt)("p",null,"Retrieve checkout status and details using the ",(0,i.kt)("a",{parentName:"p",href:"/api/#operation/get-checkout"},"Get checkout")," API call. Check ",(0,i.kt)("a",{parentName:"p",href:"/docs/payment/mobile"},"mobile payment integration guide")," for more details."),(0,i.kt)("admonition",{title:"SERVER API CALL",type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"API calls made to the ",(0,i.kt)("strong",{parentName:"p"},"paymennt")," API endpoints should be made from your server. You should ",(0,i.kt)("strong",{parentName:"p"},"NEVER")," include your API keys in your mobile application. A malicious user can gain access to your account if those keys are exposed.")),(0,i.kt)("h2",{id:"api-references"},"API References"),(0,i.kt)("h3",{id:"new-mobile-checkout"},"New Mobile Checkout"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/payment/mobile"},(0,i.kt)("strong",{parentName:"a"},"Instructions"))," / ",(0,i.kt)("a",{parentName:"p",href:"/api/#operation/create-mobile-checkout"},(0,i.kt)("strong",{parentName:"a"},"API Details"))),(0,i.kt)("h3",{id:"get-checkout-details"},"Get Checkout Details"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/#operation/get-checkout"},(0,i.kt)("strong",{parentName:"a"},"API Details"))))}u.isMDXComponent=!0},2314:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/sdk-flow-c0b29523b0c1176499edfc278f2706ad.png"}}]);